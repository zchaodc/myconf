### COLOUR (Solarized dark)

# default statusbar colors
# set-option -g status-bg black #base02
# set-option -g status-fg yellow #yellow
# set-option -g status-attr default

# default window title colors
# set-window-option -g window-status-fg brightblue #base0
# set-window-option -g window-status-bg default
# set-window-option -g window-status-attr dim

# active window title colors
# set-window-option -g window-status-current-fg brightred #orange
# set-window-option -g window-status-current-bg default
# set-window-option -g window-status-current-attr bright

# pane border
# set-option -g pane-border-fg black #base02
# set-option -g pane-active-border-fg brightgreen #base01

# message text
# set-option -g message-bg black #base02
# set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

### END: COLOUR (Solarized dark)

# status bar
set-option -g status-utf8 on

set -g status-interval 1
set -g status-justify left # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=blue]#H #[fg=black] #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load --interval 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# set default shell
# use bash
# set-option -g default-shell /bin/bash
# use ZSH
# set-option -g default-shell /bin/zsh

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# window title
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name, active(or not)

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1
set -g renumber-windows on

# history
set-option -g history-limit 4096

# keys
setw -g xterm-keys on

# Allows for faster key repetition
# set -s escape-time 0
#
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Highlight active window
set-window-option -g window-status-current-bg red

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
bind-key | split-window -h
bind-key - split-window -v

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
# set-window-option -g automatic-rename
set-option -g allow-rename off

# rm mouse mode fail
# set -g mode-mouse off
set -g mode-mouse on
# setw -g mode-mouse on
set-option -g mouse-select-pane on

# color
set -g default-terminal "screen-256color"

# Toggle mouse on with ^B m
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'

# Move current window(tab) to left or right
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
