#!/bin/bash

# User dependent .bashrc file

# If not running interactively, don't do anything
[[ "$-" != *i* ]] && return

# Shell Options


# See man bash for more options...


# Don't wait for job termination notification
set -o notify


# Don't use ^D to exit
set -o ignoreeof


# Use case-insensitive filename globbing
shopt -s nocaseglob


# Make bash append rather than overwrite the history on disk
shopt -s histappend


# When changing directory small typos can be ignored by bash
# for example, cd /vr/lgo/apache would find /var/log/apache
shopt -s cdspell

# Completion options


# These completion tuning parameters change the default behavior of bash_completion:


# Define to access remotely checked-out files over passwordless ssh for CVS
COMP_CVS_REMOTE=1


# Define to avoid stripping description in --option=description of './configure --help'
COMP_CONFIGURE_HINTS=1


# Define to avoid flattening internal contents of tar files
COMP_TAR_INTERNAL_PATHS=1


# Uncomment to turn on programmable completion enhancements.
# Any completions you add in ~/.bash_completion are sourced last.
[[ -f /etc/bash_completion ]] && . /etc/bash_completion

# History Options


# Don't put duplicate lines in the history.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups


# Ignore some controlling instructions
# HISTIGNORE is a colon-delimited list of patterns which should be excluded.
# The '&' is a special pattern which suppresses duplicate entries.
export HISTIGNORE=$'[ \t]*:&:[fb]g:exit'
export HISTIGNORE=$'[ \t]*:&:[fb]g:exit:ls' # Ignore the ls command as well


# Whenever displaying the prompt, write the previous line to disk
export PROMPT_COMMAND="history -a"

CDE_VIEW=$CLEARCASE_VIEW
# prompt
# PS1='\[\e[1;37m\]\u\[\e[0m\]@\[\e[0;31m\]\h\[\e[0m\] [\[\e[0;32m\]\W\[\e[0m\]] \[\e[0;36m\]\$\[\e[0m\] '
if [ ! -z $CDE_VIEW ]
then
    PS1='\[\e[35;1m\]\@\[\e[0m\] \[\e[33;1m\]$CDE_VIEW\[\e[0m\]@\[\e[0;31m\]\h\[\e[0m\] [\[\e[0;32m\]\w\[\e[0m\]] \n\[\e[0;36m\]\$\[\e[0m\] '
else
    PS1='\[\e[35;1m\]\@\[\e[0m\] \[\e[33;1m\]\u\[\e[0m\]@\[\e[0;31m\]\h\[\e[0m\] [\[\e[0;32m\]\w\[\e[0m\]] \n\[\e[0;36m\]\$\[\e[0m\] '
fi

# Aliases


if [ -f "${HOME}/.bash_aliases" ]; then
   source "${HOME}/.bash_aliases"
fi



# Some example alias instructions
# If these are enabled they will be used instead of any instructions
# they may mask.  For example, alias rm='rm -i' will mask the rm
# application.  To override the alias instruction use a \ before, ie
# \rm will call the real rm not the alias.


# Interactive and verbose operation
alias rm='rm -iv '
alias cp='cp -iv '
alias mv='mv -iv '


# Default to human readable figures
alias df='df -h '
alias du='du -h '


# Misc :)
alias less='less -r'                          # raw control characters
alias whence='type -a'                        # where, of a sort
alias grep='grep --color'                     # show differences in colour
alias egrep='egrep --color=auto'              # show differences in colour
alias fgrep='fgrep --color=auto'              # show differences in colour


# Some shortcuts for different directory listings
alias ls='ls -hF --color=tty'                 # classify files in colour
alias dir='ls --color=auto --format=vertical'
alias vdir='ls --color=auto --format=long'
alias ll='ls -l'                              # long list
alias la='ls -A'                              # all but . and ..
alias l='ls -CF'                              #


# Enable aliases to be sudoâ€™ed
alias sudo='sudo '

# Functions
if [ -f "${HOME}/.bash_functions"  ]; then
      source "${HOME}/.bash_functions"
  fi
#
# Some example functions:
#
# a) function settitle
settitle ()
{
      echo -ne "\e]2;$@\a\e]1;$@\a";
}

# terminal 256 color settings
if [ -e /usr/share/terminfo/x/xterm-256color  ]; then
    #debian in /lib/terminfo/x/xterm-256color
    export TERM='xterm-256color'
else
    export TERM='xterm-color'
fi

# Personal Settings

# sbg project
if [[ -f "${HOME}/projects/sbg/scripts/bash_sbg" ]]; then
   source "${HOME}/projects/sbg/scripts/bash_sbg"
fi
